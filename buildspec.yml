version: 0.2

phases:
  pre_build:
    commands:
      - pip install --upgrade awscli
      - GITHUB_REPO_URL=https://github.com/teuteuguy/gg-sense-hat-imu
      - echo $AWS_REGION . $CODEBUILD_SOURCE_REPO_URL . $CODEBUILD_RESOLVED_SOURCE_VERSION . $CODEBUILD_INITIATOR . $CODEBUILD_SOURCE_VERSION
      - echo Getting the Instance ID of our SSM managed device
      - ls
      - INSTANCE_ID=`aws ssm describe-instance-information --region $AWS_REGION --query 'InstanceInformationList[?Name==\`donkeycar\`].InstanceId' --output text`
      - echo InstanceId = $INSTANCE_ID
      - echo Getting the AWS IoT Get Credentials endpoint
      - IOT_CREDENTIAL_ENDPOINT=`aws iot describe-endpoint --endpoint-type iot:CredentialProvider --region $AWS_REGION --output text`
      - echo AWS IoT Endpoint = $IOT_CREDENTIAL_ENDPOINT
  build:
    commands:
      - echo Running the build on the SSM managed device
      - SSM_COMMAND_ID=`aws ssm send-command --region $AWS_REGION --instance-ids "$INSTANCE_ID" --document-name "rpi-build" --parameters gitRepositoryURL="$GITHUB_REPO_URL",iotCredentialEndpoint="$IOT_CREDENTIAL_ENDPOINT" --query Command.CommandId --output text`
      - SSM_COMMAND_DONE=false
      - for i in `seq 1 6`; do SSM_STATUS=`aws ssm get-command-invocation --instance-id "$INSTANCE_ID" --command-id $SSM_COMMAND_ID --region $AWS_REGION --query Status --output text`; echo $SSM_COMMAND_ID $SSM_STATUS $i; case $SSM_STATUS in Pending|InProgress|Delayed) echo "WAITING"; sleep 5 ;; *) echo "DONE"; SSM_COMMAND_DONE=true; break ;; esac done
      - if $SSM_COMMAND_DONE ; then exit 0; else exit 1; fi

